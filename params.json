{"name":"Capture","tagline":"Javascript analytics made easy.","body":"# Capture [![Build Status](https://travis-ci.org/eatarandom/capture.png?branch=master)](https://travis-ci.org/eatarandom/capture)\r\n\r\n> Javascript analytics made easy.\r\n\r\n## Overview\r\n\r\nCapture aims to provide a single location to configure all DOM event tracking. Capture can also be easily used for both __DOM__ and __javascript__ based analytics.\r\n\r\n__What analytics providers does Capture support?__\r\n> Capture currently has built in support for Google Analytics. However, Capture also supports adding your own provider. In future releases, there will be more built in providers.\r\n\r\n__What is required to use Capture?__\r\n> There's no need to go and look at the [Google Analytics](https://developers.google.com/analytics/devguides/collection/gajs/) documentation. The dependacies are currently handled internally by Capture. The only thing required to use Capture is a Google Analytics account number.\r\n\r\n### Basic setup for handling DOM analytics\r\n\r\n```js\r\n\t// Create an array of tracking objects to be passed into Capture.\r\n\tvar eventsConfig = [{\r\n\t\tid: 1,\r\n\t\tparent_selector: 'header',\r\n\t\tselector: '.logo',\r\n\t\taction: 'click',\r\n\t\ttype: 'track',\r\n\t\tprops: {\r\n\t\t\tcategory: 'header',\r\n\t\t\taction: function(){\r\n\t\t\t\treturn 'click_logo_' + document.location.pathname;\r\n\t\t\t},\r\n\t\t\topt_label: 'non_non',\r\n\t\t\topt_value: 1,\r\n\t\t\topt_noninteraction: false\r\n\t\t}\r\n\t\t\r\n\t}];\r\n\t\r\n\t// Create an instance of Capture with an events config using Google Analytics.\r\n\tvar capture = new Capture({\r\n\t\tevents: eventsConfig,\r\n\t\tproviders: [{\r\n\t\t\tname: 'gaq',\r\n\t\t\toptions: {\r\n\t\t\t\taccount: 'UA-XXXXX-X' \r\n\t\t\t}\r\n\t\t}]\r\n\t});\r\n```\r\n\r\n### Basic setup for handling javascript analytics\r\n\r\n```js\r\n\t// Create an instance of Capture using Google Analytics.\r\n\tvar capture = new Capture({\r\n\t\tproviders: [{\r\n\t\t\tname: 'gaq',\r\n\t\t\toptions: {\r\n\t\t\t\taccount: 'UA-XXXXX-X' \r\n\t\t\t}\r\n\t\t}]\r\n\t});\r\n\t\r\n\t// Capture an event.\r\n\tcapture.track({\r\n\t\tcategory: 'header',\r\n\t\taction: 'click_logo_',\r\n\t\topt_label: 'non_non',\r\n\t\topt_value: 1,\r\n\t\topt_noninteraction: false\t\r\n\t});\r\n\t\r\n\t// Capture a pageview.\r\n\tcapture.pageview({\r\n\t\turl: document.location.pathname\t\r\n\t});\r\n```\r\n\r\n## Options\r\n\r\n### Providers _are an array of provider objects_.\r\n```js\r\nproviders: [{\r\n\tname: '',\r\n\toptions: {},\r\n\tmethods: {}\r\n}]\r\n```\r\n\r\n__Name__ _string_\r\n> __Required__. Name of the provider you want to use or are creating.  \r\n\r\n```js\t\r\nname: 'gaq'\r\n```\r\n\r\n__Options__ _object_\r\n> __Required__. An object of options to pass into the the constructor of the Provider. \r\n\r\n```js\t\r\noptions: { \r\n\taccount: 'UA-XXXXX-X'\r\n}\r\n```\r\n\r\n__Methods__ _object_\r\n> __Optional__. _Recommended for advanced use only_. Methods to extend the Provider prototype.\r\n\r\n```js\t\r\nmethods: {\r\n\t// Automatically called after initialize.\r\n\tsetup: function () {}\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### Events _are an array of event objects_.\r\n```js\r\nevents: [{\r\n\tid: '',\r\n\tparent_selector: '',\r\n\tselector: '',\r\n\taction: '',\r\n\ttype: '',\r\n\tprops: {}\r\n}]\r\n```\r\n__Id__ _number_\r\n> __Optional__. Used in debugging to track which events failed/succeeded. _Support coming in 0.2.0-beta_.\r\n\r\n```js\t\r\n id: 1\r\n```\r\n\r\n__Parent selector__ _string/object_\r\n> __Optional__. Helpful to speed up selection when dynamically adding elements to the dom. Defaults to 'body'.\r\n\r\n```js\t\r\nparent_selector: 'section'\r\n```\r\n\r\n__Selector__ _string/object_\r\n> __Required__. Selector that will be have action attached.\r\n\r\n```js\t\r\nselector: 'a.track'\r\n```\r\n\r\n__Action__ _string_\r\n> __Required__. Dom event to attach to selector.\r\n\r\n```js\t\r\naction: 'click'\r\n```\r\n\r\n__Type__ _string/array_\r\n> __Required__. Event type(s) that's triggered on user action.\r\n\r\n```js\t\r\ntype: 'track'\r\n```\r\n\r\n__Props__ _object_\r\n> __Required__. Properties to send with the event type. Properties can be functions. If a function, it will be called with the context of the selector.\r\n\r\n```js\t\r\nprops: {\r\n\t// required\r\n\tcategory: '',\r\n\taction: '',\r\n\t// mandatory\r\n\topt_label: '',\r\n\topt_value: 0,\r\n\topt_noninteraction: false,\r\n\turl: '',\r\n}\r\n```\r\n\r\n## Contributing to the project\r\nFirst, ensure that you have the latest [Node.js](http://nodejs.org/) and [npm](https://npmjs.org/) installed. If you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide.\r\n\r\n### Getting setup locally\r\n\r\n```bash\r\n  \tgit clone https://github.com/eatarandom/capture.git\r\n  \tcd capture\r\n  \tnpm install and bower install\r\n```\r\n\r\nRunning unit tests\r\n\r\n```bash\r\n\tgrunt test\r\n```\r\n\r\n","google":"UA-39855022-1","note":"Don't delete this file! It's used internally to help with page regeneration."}